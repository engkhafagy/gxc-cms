<?php

/**
 * This is the model base class for the table "{{roles}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Roles".
 *
 * Columns in table "{{roles}}" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $title
 * @property string $alias
 * @property string $created
 * @property string $updated
 *
 */
abstract class BaseRoles extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{roles}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Roles|Roles', $n);
	}

	public static function representingColumn() {
		return 'title';
	}

	public function rules() {
		return array(
			array('title', 'required'),
			array('title, alias', 'length', 'max'=>100),
			array('created, updated', 'safe'),
			array('alias, created, updated', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, title, alias, created, updated', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		  'users' => array(self::HAS_MANY, 'User', 'role_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'title' => Yii::t('app', 'Title'),
			'alias' => Yii::t('app', 'Alias'),
			'created' => Yii::t('app', 'Created'),
			'updated' => Yii::t('app', 'Updated'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('alias', $this->alias, true);
		$criteria->compare('created', $this->created, true);
		$criteria->compare('updated', $this->updated, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
			'pagination'=>array(
                'pageSize'=>Yii::app()->params['defaultPageSize'],
            ),  
		));
	}
}